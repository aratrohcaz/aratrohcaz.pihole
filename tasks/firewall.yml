---
- name: Configure Firewall

## Below is the original text from the script that allows the traffic

# configureFirewall() {
#     echo ""
#     # If a firewall is running,
#     if firewall-cmd --state &> /dev/null; then
#         # ask if the user wants to install Pi-hole's default firewall rules
#         whiptail --title "Firewall in use" --yesno "We have detected a running firewall\\n\\nPi-hole currently requires HTTP and DNS port access.\\n\\n\\n\\nInstall Pi-hole default firewall rules?" ${r} ${c} || \
#         { echo -e "  ${INFO} Not installing firewall rulesets."; return 0; }
#         echo -e "  ${TICK} Configuring FirewallD for httpd and pihole-FTL"
#         # Allow HTTP and DNS traffic
#         firewall-cmd --permanent --add-service=http --add-service=dns
#         # Reload the firewall to apply these changes
#         firewall-cmd --reload
#         return 0
#         # Check for proper kernel modules to prevent failure
#     elif modinfo ip_tables &> /dev/null && command -v iptables &> /dev/null; then
#     # If chain Policy is not ACCEPT or last Rule is not ACCEPT
#     # then check and insert our Rules above the DROP/REJECT Rule.
#         if iptables -S INPUT | head -n1 | grep -qv '^-P.*ACCEPT$' || iptables -S INPUT | tail -n1 | grep -qv '^-\(A\|P\).*ACCEPT$'; then
#             whiptail --title "Firewall in use" --yesno "We have detected a running firewall\\n\\nPi-hole currently requires HTTP and DNS port access.\\n\\n\\n\\nInstall Pi-hole default firewall rules?" ${r} ${c} || \
#             { echo -e "  ${INFO} Not installing firewall rulesets."; return 0; }
#             echo -e "  ${TICK} Installing new IPTables firewall rulesets"
#             # Check chain first, otherwise a new rule will duplicate old ones
#             iptables -C INPUT -p tcp -m tcp --dport 80 -j ACCEPT &> /dev/null || iptables -I INPUT 1 -p tcp -m tcp --dport 80 -j ACCEPT
#             iptables -C INPUT -p tcp -m tcp --dport 53 -j ACCEPT &> /dev/null || iptables -I INPUT 1 -p tcp -m tcp --dport 53 -j ACCEPT
#             iptables -C INPUT -p udp -m udp --dport 53 -j ACCEPT &> /dev/null || iptables -I INPUT 1 -p udp -m udp --dport 53 -j ACCEPT
#             iptables -C INPUT -p tcp -m tcp --dport 4711:4720 -i lo -j ACCEPT &> /dev/null || iptables -I INPUT 1 -p tcp -m tcp --dport 4711:4720 -i lo -j ACCEPT
#             return 0
#         fi
#     # Otherwise,
#     else
#         # no firewall is running
#         echo -e "  ${INFO} No active firewall detected.. skipping firewall configuration"
#         # so just exit
#         return 0
#     fi
#     echo -e "  ${INFO} Skipping firewall configuration"
# }

---
- name: Add piHole user
  user:
    name: "{{ pihole_user_name }}"
    system: yes
    shell: /usr/sbin/nologin
    comment: 'piHole User'
    append: yes
    state: present

- name: Create pihole config directory
  file:
    path: "{{ pihole_config_directory }}"
    state: directory
    owner: "{{ pihole_user_name }}"
    group: "{{ pihole_user_group }}"

- name: Create pihole install directory
  file:
    path: "{{ pihole_install_directory }}"
    state: directory
    owner: "{{ pihole_user_name }}"
    group: "{{ pihole_user_group }}"

## TODO
# - name: Remove any previously copied files

# Copy does not support recursive - separate also aids debugging
- name: Copy Gravity Script
  copy:
    src: "{{ pihole_repo_dir }}/gravity.sh"
    dest: "{{ pihole_install_directory }}"
    owner: "{{ pihole_user_name }}"
    remote_src: true
    mode: 0755

# delegate_to: 127.0.0.1
# - name: Tell Master
#   action: shell echo "{{ansible_fqdn}} done" >> /tmp/list
#   delegate_to: "{{ inventory_hostname }}"
#   tags:
#     - special

- name: Copy other required files
  shell: "install -o {{ pihole_user_name }} -Dm755 -t {{ pihole_install_directory }} {{ pihole_repo_dir }}/advanced/Scripts/*.sh"

- name: Copy Uninstall Script
  copy:
    src: "{{ pihole_repo_dir }}/automated install/uninstall.sh"
    dest: "{{ pihole_install_directory }}"
    owner: "{{ pihole_user_name }}"
    remote_src: true
    mode: 0755

- name: Copy COL_TABLE
  copy:
    src: "{{ pihole_repo_dir }}/advanced/Scripts/COL_TABLE"
    dest: "{{ pihole_install_directory }}"
    owner: "{{ pihole_user_name }}"
    remote_src: true
    mode: 0755

- name: Copy Pihole Executable
  copy:
    src: "{{ pihole_repo_dir }}/pihole"
    dest: "/usr/local/bin/"
    owner: "{{ pihole_user_name }}"
    remote_src: true
    mode: 0755

#region pihole FTL config
- name: Ensure pihole-FTL config exists
  copy:
    content: ""
    dest: "{{ pihole_config_directory}}/pihole-FTL.conf"
    force: no
    group: "{{ pihole_user_group }}"
    owner: "{{ pihole_user_name }}"
    mode: 0664

- name: Get Latest Tag URL
  uri:
    url: https://github.com/pi-hole/FTL/releases/latest
    method: HEAD
  register: latest_tag_url
  tags:
    - special

- name: Parse Latest version
  shell: "echo {{ latest_tag_url.url }} | awk -F '/' '{print $NF}'"
  register: latest_tag
  tags:
    - special
## Can now move onto line 2044 - version got!
# - name: "Set pihole install state"
#   set_fact:
#     pihole_installed: "{{ pihole_binary.stat.exists | default(false) }}"

# TODO: Remove
- debug: var=latest_tag.stdout
  tags:
    - special
    ## WORKS
- debug: var=latest_tag_url.url
  tags:
    - special
#endregion

- name: "Configure piHole Settings"
  template:
    src: setupVars.conf.j2
    dest: "{{ pihole_config_directory }}/setupVars.conf"
  when: pihole_installed
  tags:
    - pihole-config

- name: "Configure piHole Adlists"
  template:
    src: adlists.list.j2
    dest: "{{ pihole_config_directory }}/adlists.list"
  when: pihole_installed
  tags:
    - pihole-adlist
  notify:
    - pihole gravity

- name: Setup Cron
  template:
    src: cron.j2
    dest: "/etc/cron.d/pihole"

- name: Setup LogRotate
  template:
    src: logrotate.j2
    dest: "/etc/pihole/logrotate" #TODO double check directory location
